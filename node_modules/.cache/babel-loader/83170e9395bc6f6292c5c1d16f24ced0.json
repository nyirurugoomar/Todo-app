{"ast":null,"code":"var _jsxFileName = \"/Users/Omar/Desktop/todo-list/Todo-app/src/components/ToDo.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ToDo = _ref => {\n  let {\n    toDo,\n    markDone,\n    setUpdateData,\n    deleteTask\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: toDo && toDo.sort((a, b) => a.id > b.id ? 1 : -1) // it keeps task on order\n    .map((task, index) => {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col taskBg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: task.status ? 'done' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"taskNumber\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 12,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"taskText\",\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 13,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"iconsWrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Completed / Not Completed\",\n              onClick: e => markDone(task.id),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCircleCheck\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 20,\n                columnNumber: 24\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 22\n            }, this), task.status ? null : /*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Edit\",\n              onClick: () => setUpdateData({\n                id: task.id,\n                title: task.title,\n                status: task.status ? true : false\n              }),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faPen\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 24\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Delete\",\n              onClick: () => deleteTask(task.id),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faTrashCan\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 22\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 18\n        }, this)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false);\n};\n\n_c = ToDo;\nexport default ToDo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"names":["ToDo","toDo","markDone","setUpdateData","deleteTask","sort","a","b","id","map","task","index","status","title","e","faCircleCheck","faPen","faTrashCan"],"sources":["/Users/Omar/Desktop/todo-list/Todo-app/src/components/ToDo.jsx"],"sourcesContent":["const ToDo =({toDo,markDone,setUpdateData,deleteTask }) =>{\n    return(\n        <>\n        {toDo && toDo\n            .sort((a,b)=>a.id>b.id ?1 : -1) // it keeps task on order\n            .map((task, index) =>{\n              return(\n                <React.Fragment key={task.id}>\n                   \n                 <div className=\"col taskBg\">\n                   <div className={task.status ? 'done' : ''}>\n                   <span className='taskNumber'>{index +1}</span>\n                   <span className='taskText'>{task.title}</span>\n       \n                   </div>\n                     \n                   <div className='iconsWrap'>\n                     <span title = \"Completed / Not Completed\"\n                     onClick={(e) =>markDone(task.id)}>\n                       <FontAwesomeIcon icon={faCircleCheck}/>\n                     </span>\n                      \n                      {task.status ? null :(\n                        <span title=\"Edit\"\n                        onClick={() =>setUpdateData ({\n                          id:task.id,\n                          title:task.title,\n                          status:task.status ? true : false\n                          })}>\n                       <FontAwesomeIcon icon={faPen}/>\n                     </span>\n                      )}\n                     \n       \n                     <span title='Delete' \n                     onClick={() => deleteTask(task.id)}>\n                     <FontAwesomeIcon icon={faTrashCan}/>\n                     </span>\n       \n                   </div>\n       \n                 </div>\n                 \n       \n                  \n       \n                </React.Fragment>\n              )\n            })\n        }\n        </>\n    )\n}\n\nexport default ToDo;"],"mappings":";;;;AAAA,MAAMA,IAAI,GAAE,QAA8C;EAAA,IAA7C;IAACC,IAAD;IAAMC,QAAN;IAAeC,aAAf;IAA6BC;EAA7B,CAA6C;EACtD,oBACI;IAAA,UACCH,IAAI,IAAIA,IAAI,CACRI,IADI,CACC,CAACC,CAAD,EAAGC,CAAH,KAAOD,CAAC,CAACE,EAAF,GAAKD,CAAC,CAACC,EAAP,GAAW,CAAX,GAAe,CAAC,CADxB,EAC2B;IAD3B,CAEJC,GAFI,CAEA,CAACC,IAAD,EAAOC,KAAP,KAAgB;MACnB,oBACE,QAAC,KAAD,CAAO,QAAP;QAAA,uBAEC;UAAK,SAAS,EAAC,YAAf;UAAA,wBACE;YAAK,SAAS,EAAED,IAAI,CAACE,MAAL,GAAc,MAAd,GAAuB,EAAvC;YAAA,wBACA;cAAM,SAAS,EAAC,YAAhB;cAAA,UAA8BD,KAAK,GAAE;YAArC;cAAA;cAAA;cAAA;YAAA,QADA,eAEA;cAAM,SAAS,EAAC,UAAhB;cAAA,UAA4BD,IAAI,CAACG;YAAjC;cAAA;cAAA;cAAA;YAAA,QAFA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAOE;YAAK,SAAS,EAAC,WAAf;YAAA,wBACE;cAAM,KAAK,EAAG,2BAAd;cACA,OAAO,EAAGC,CAAD,IAAMZ,QAAQ,CAACQ,IAAI,CAACF,EAAN,CADvB;cAAA,uBAEE,QAAC,eAAD;gBAAiB,IAAI,EAAEO;cAAvB;gBAAA;gBAAA;gBAAA;cAAA;YAFF;cAAA;cAAA;cAAA;YAAA,QADF,EAMIL,IAAI,CAACE,MAAL,GAAc,IAAd,gBACC;cAAM,KAAK,EAAC,MAAZ;cACA,OAAO,EAAE,MAAKT,aAAa,CAAE;gBAC3BK,EAAE,EAACE,IAAI,CAACF,EADmB;gBAE3BK,KAAK,EAACH,IAAI,CAACG,KAFgB;gBAG3BD,MAAM,EAACF,IAAI,CAACE,MAAL,GAAc,IAAd,GAAqB;cAHD,CAAF,CAD3B;cAAA,uBAMD,QAAC,eAAD;gBAAiB,IAAI,EAAEI;cAAvB;gBAAA;gBAAA;gBAAA;cAAA;YANC;cAAA;cAAA;cAAA;YAAA,QAPL,eAkBE;cAAM,KAAK,EAAC,QAAZ;cACA,OAAO,EAAE,MAAMZ,UAAU,CAACM,IAAI,CAACF,EAAN,CADzB;cAAA,uBAEA,QAAC,eAAD;gBAAiB,IAAI,EAAES;cAAvB;gBAAA;gBAAA;gBAAA;cAAA;YAFA;cAAA;cAAA;cAAA;YAAA,QAlBF;UAAA;YAAA;YAAA;YAAA;UAAA,QAPF;QAAA;UAAA;UAAA;UAAA;QAAA;MAFD,GAAqBP,IAAI,CAACF,EAA1B;QAAA;QAAA;QAAA;MAAA,QADF;IA0CD,CA7CI;EADT,iBADJ;AAmDH,CApDD;;KAAMR,I;AAsDN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}