{"ast":null,"code":"var _jsxFileName = \"/Users/Omar/Desktop/todo-list/Todo-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport AddTaskForm from './components/AddTaskForm.jsx';\nimport ToDo from './components/ToDo.jsx';\nimport UpdateForm from './components/UpdateForm.jsx';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleCheck, faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [toDo, setToDo] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const [updateData, setUpdateData] = useState(''); //Add task\n\n  const addTask = () => {\n    if (newTask) {\n      let num = toDo.length + 1;\n      let newEntry = {\n        id: num,\n        title: newTask,\n        status: false\n      };\n      setToDo([...toDo, newEntry]);\n      setNewTask('');\n    }\n  }; //-----------------------------------\n  //Delete task\n\n\n  const deleteTask = id => {\n    let newTasks = toDo.filter(task => task.id !== id);\n    setToDo(newTasks);\n  }; //-----------------------------------\n  //Mark task as done or Completed\n\n\n  const markDone = id => {\n    const newTask = toDo.map(task => {\n      if (task.id === id) {\n        return { ...task,\n          status: !task.status\n        };\n      }\n\n      return task;\n    });\n    setToDo(newTask);\n  }; //-----------------------------------\n  //Cancel update\n\n\n  const cancelUpdate = () => {\n    setUpdateData('');\n  }; //-----------------------------------\n  // change task for update\n\n\n  const changeTask = e => {\n    let newEntry = {\n      id: updateData.id,\n      title: e.target.value,\n      status: updateData.status ? true : false\n    };\n    setUpdateData(newEntry);\n  }; //-----------------------------------\n  //Update task\n\n\n  const updateTask = () => {\n    let filterRecords = [...toDo].filter(task => task.id !== updateData.id);\n    let updatedObject = [...filterRecords, updateData];\n    setToDo(updatedObject);\n    setUpdateData('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container App\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"To Do List App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), updateData && updateData.title ? /*#__PURE__*/_jsxDEV(UpdateForm, {\n      updateData: updateData,\n      changeTask: changeTask,\n      updateTask: updateTask,\n      cancelUpdate: cancelUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(AddTaskForm, {\n      newTask: newTask,\n      setNewTask: setNewTask,\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }, this), toDo && toDo.length ? '' : 'No Tasks...', toDo && toDo.sort((a, b) => a.id > b.id ? 1 : -1) // it keeps task on order\n    .map((task, index) => {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col taskBg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: task.status ? 'done' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"taskNumber\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"taskText\",\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"iconsWrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Completed / Not Completed\",\n              onClick: e => markDone(task.id),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faCircleCheck\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), task.status ? null : /*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Edit\",\n              onClick: () => setUpdateData({\n                id: task.id,\n                title: task.title,\n                status: task.status ? true : false\n              }),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faPen\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Delete\",\n              onClick: () => deleteTask(task.id),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faTrashCan\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 10\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Fsj5nwmfD52OHKl+FEkojORRu+g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","AddTaskForm","ToDo","UpdateForm","FontAwesomeIcon","faCircleCheck","faPen","faTrashCan","App","toDo","setToDo","newTask","setNewTask","updateData","setUpdateData","addTask","num","length","newEntry","id","title","status","deleteTask","newTasks","filter","task","markDone","map","cancelUpdate","changeTask","e","target","value","updateTask","filterRecords","updatedObject","sort","a","b","index"],"sources":["/Users/Omar/Desktop/todo-list/Todo-app/src/App.js"],"sourcesContent":["import React,{useState} from 'react';\nimport AddTaskForm from './components/AddTaskForm.jsx';\nimport ToDo from './components/ToDo.jsx';\nimport UpdateForm from './components/UpdateForm.jsx';\n\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faCircleCheck, faPen, faTrashCan\n} from '@fortawesome/free-solid-svg-icons'\nimport './App.css';\n\nfunction App() {\n\n  const [toDo, setToDo] = useState([\n    \n    \n\n  ]);\n\n  const [newTask, setNewTask] = useState('');\n  const [updateData, setUpdateData] = useState('');\n\n  //Add task\n  const addTask =()=>{\n    if(newTask){\n      let num=toDo.length +1;\n      let newEntry= {id:num,title:newTask,status:false}\n      setToDo([...toDo,newEntry])\n      setNewTask('')\n    }\n\n  }\n  //-----------------------------------\n  //Delete task\n  const deleteTask =(id)=>{\n    let newTasks=toDo.filter(task =>task.id !== id)\n    setToDo(newTasks);\n    \n  }\n  //-----------------------------------\n  //Mark task as done or Completed\n  const markDone =(id)=>{\n    const newTask=toDo.map(task => {\n      if(task.id === id){                                                             \n        return({...task,status: !task.status })\n      }\n      return task;\n    })\n    setToDo(newTask);\n  }\n  //-----------------------------------\n  //Cancel update\n  const cancelUpdate =()=>{\n    setUpdateData('');\n    \n  }\n  //-----------------------------------\n  // change task for update\n  const changeTask =(e)=>{\n    let newEntry={\n     id: updateData.id,\n     title: e.target.value,\n     status:updateData.status ? true : false\n    }\n    setUpdateData(newEntry);\n\n    \n  }\n  //-----------------------------------\n  //Update task\n  const updateTask =()=>{\n    let filterRecords =[...toDo].filter(task =>task.id !== updateData.id);\n    let updatedObject = [...filterRecords,updateData]\n    setToDo(updatedObject);\n    setUpdateData('');\n    \n  }\n\n\n\n  return (\n    <div className=\"container App\"> \n\n        <br></br>\n        <h2>To Do List App</h2>\n        <br></br>\n\n        {/* //Update Task */}\n        {updateData && updateData.title ? (\n\n          <UpdateForm \n          updateData={updateData}\n          changeTask={changeTask}\n          updateTask={updateTask}\n          cancelUpdate={cancelUpdate}\n          />\n\n        ) : (\n          <AddTaskForm\n          newTask={newTask}\n          setNewTask={setNewTask}\n          addTask={addTask}\n          />\n          \n        )} \n        \n\n       \n\n     {toDo && toDo.length ? '' : 'No Tasks...'}\n     {toDo && toDo\n     .sort((a,b)=>a.id>b.id ?1 : -1) // it keeps task on order\n     .map((task, index) =>{\n       return(\n         <React.Fragment key={task.id}>\n            \n          <div className=\"col taskBg\">\n            <div className={task.status ? 'done' : ''}>\n            <span className='taskNumber'>{index +1}</span>\n            <span className='taskText'>{task.title}</span>\n\n            </div>\n              \n            <div className='iconsWrap'>\n              <span title = \"Completed / Not Completed\"\n              onClick={(e) =>markDone(task.id)}>\n                <FontAwesomeIcon icon={faCircleCheck}/>\n              </span>\n               \n               {task.status ? null :(\n                 <span title=\"Edit\"\n                 onClick={() =>setUpdateData ({\n                   id:task.id,\n                   title:task.title,\n                   status:task.status ? true : false\n                   })}>\n                <FontAwesomeIcon icon={faPen}/>\n              </span>\n               )}\n              \n\n              <span title='Delete' \n              onClick={() => deleteTask(task.id)}>\n              <FontAwesomeIcon icon={faTrashCan}/>\n              </span>\n\n            </div>\n\n          </div>\n          \n\n           \n\n         </React.Fragment>\n       )\n     })\n     }\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}